+ Basic usage test (going to configure the server port)
+ Uniform configuration-supporting command registration for modules: I'm
  going to add a "commands" object to modules that will include all the
  information about the commands along with the callbacks for them. Then
  I'll link command registration to configuration loading.
+ UI for changing the configuration during runtime.
- Support for user data files for modules (for large data that shouldn't
  be in the configurations themselves).
- Switch to function-trigger based configuration form.
  Trigger ideas:
	- Command (with filters)
	- Keywords (+ filters, regex)
	- Key shortcut
	- Voice command
	- Channel Reward
- Also add function responses.
  Response ideas:
	- Chat message
	- Whisper
	- Chat message from SE
	- TTS
	- Log
	- File?
- User data editor: raw (use shell to open Notepad for data files).
- User data editor: built-in, data-specific interface that allows visual
  editing of the data (each module will need to define these editors for
  itself).
- OBS Websocket module
- Voice activation mechanism (in addition to commands and shortcut keys)
